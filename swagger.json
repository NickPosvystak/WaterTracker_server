{
  "openapi": "3.0.1",
  "info": {
    "version": "1.0.1",
    "title": "WaterTracker Api",
    "description": "WaterTracker Api-ui-express",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "servers": [{ "url": "https://water-tracker-backend-314i.onrender.com/api" }],
  "tags": [
    {
      "name": "Auth",
      "description": "Authorization endpoints"
    },
    {
      "name": "User",
      "description": "User endpoints"
    },
    {
      "name": "Water",
      "description": "Water endpoints"
    }
  ],

  "paths": {
    "/user/google": {
      "get": {
        "tags": ["Auth"],
        "summary": "User registration from Google",
        "parameters": [],
        "description": "This route use for google authorization and don't need any params or body.",

        "responses": {
          "": {
            "description": "When the user is certified, the Google Api redirects him to the route: /google-redirect"
          }
        }
      }
    },
    "/user/google-redirect": {
      "get": {
        "tags": ["Auth"],
        "summary": "User registration from Google Api redirect route",
        "parameters": [],
        "description": "If the user has received confirmation, Google sends a `code` to the parameters. We use this parameter to get information about the user from Google and store the user in our API",

        "responses": {
          "": {
            "description": "The saved user receives a token and redirects to frontend"
          }
        }
      }
    },
    "/user/register": {
      "post": {
        "tags": ["Auth"],
        "summary": "User registration",
        "parameters": [],
        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Register is successfully!",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "409": {
            "description": "Email is already in use",
            "content": {}
          }
        }
      }
    },
    "/user/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "User login",
        "parameters": [],
        "requestBody": {
          "description": "Login object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login is successfully!",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogInResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "404": {
            "description": "Email or password is wrong",
            "content": {}
          }
        }
      }
    },
    "/user/logout": {
      "post": {
        "tags": ["Auth"],
        "summary": "User logout",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {},
        "responses": {
          "204": {
            "description": "User successfully logout"
          },
          "401": {
            "description": "Not authorized!",
            "content": {}
          }
        }
      }
    },
    "/user/forgot-password": {
      "post": {
        "tags": ["Auth"],
        "summary": "Sending an email to a user with a new password",
        "parameters": [],
        "requestBody": {
          "description": "User email",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewPasswordResponse"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password reset instruction sent by email",
            "content": {}
          },
          "400": {
            "description": "Email is required",
            "content": {}
          },
          "404": {
            "description": "Email not found",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      }
    },
    "/user/restore-password/{verificationToken}": {
      "patch": {
        "tags": ["Auth"],
        "summary": "Restoring user password with verification token",
        "parameters": [
          {
            "name": "verificationToken",
            "in": "path",
            "description": "Verification token received via email",
            "required": true
          }
        ],
        "requestBody": {
          "description": "User new password",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/restorePassword"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {}
          },
          "400": {
            "description": "Token has expired",
            "content": {}
          },
          "404": {
            "description": "Email not found",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      }
    },
    "/user/current": {
      "get": {
        "tags": ["User"],
        "summary": "Get current user with all information",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {},
        "responses": {
          "200": {
            "description": "Get current user data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrentResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized!",
            "content": {}
          }
        }
      }
    },
    "/user/avatars": {
      "patch": {
        "tags": ["User"],
        "summary": "Changing user avatar",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Update avatar",
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "paramType": "body",
                "properties": {
                  "file": {
                    "type": "file",
                    "name": "file"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AvatarResponse"
                }
              }
            }
          },
          "400": {
            "description": "File format doesn't supported",
            "content": {}
          },
          "409": {
            "description": "Please add your avatar!",
            "content": {}
          }
        }
      }
    },
    "/user/updateUser": {
      "patch": {
        "tags": ["User"],
        "summary": "Changing user data",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Data object to update",
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update user data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "User with email: example@gmail.com already exist",
            "content": {}
          },
          "409": {
            "description": "The entered password is incorrect!",
            "content": {}
          },
          "500": {
            "description": "Failed to update user",
            "content": {}
          }
        }
      }
    },
    "/user/updateWaterRate": {
      "patch": {
        "tags": ["User"],
        "summary": "Changing daily water rate",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "User Water Rate",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WaterRate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WaterRate"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Not authorized!",
            "content": {}
          }
        }
      }
    },
    "/water/": {
      "post": {
        "tags": ["Water"],
        "summary": "Add information about water rate",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Water rate data",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WaterRateDataRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WaterRateDataResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Not authorized!",
            "content": {}
          }
        }
      }
    },
    "/water/{waterId}": {
      "put": {
        "tags": ["Water"],
        "summary": "Update information about water rate",
        "parameters": [
          {
            "name": "waterId",
            "in": "path",
            "description": "ID of the water entry",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Update water rate data",
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WaterRateDataRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WaterRateDataResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Not authorized!",
            "content": {}
          }
        }
      }
    },
    "/water/{waterId} ": {
      "delete": {
        "tags": ["Water"],
        "summary": "Delete all information about water rate",
        "parameters": [
          {
            "name": "waterId",
            "in": "path",
            "description": "ID of the water entry",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Don't need",
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteWaterResponse"
                }
              }
            }
          },
          "400": {
            "description": "Missing or empty waterId parameter",
            "content": {}
          },
          "401": {
            "description": "Not authorized!",
            "content": {}
          }
        }
      }
    },
    "/water/today": {
      "get": {
        "tags": ["Water"],
        "summary": "Calculation as a percentage of the amount of water consumed and a list of all records of water consumption by the user for the current day",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Water per current day",
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WaterTodayResponse"
                }
              }
            }
          },
          "404": {
            "description": "User not found or missing dailyNorm",
            "content": {}
          },
          "401": {
            "description": "Unauthorized: User not found",
            "content": {}
          }
        }
      }
    },
    "/water/month": {
      "get": {
        "tags": ["Water"],
        "summary": "Receiving information on the amount of water consumed for the selected month",
        "parameters": [
          {
            "name": "date",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Year and month",
            "example": "2024-2"
          }
        ],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Water per current month",
          "required": false,
          "content": {
            "application/json": {}
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WaterMonthResponse"
                }
              }
            }
          },
          "404": {
            "description": "User not found or missing dailyNorm",
            "content": {}
          },
          "401": {
            "description": "Unauthorized: User not found",
            "content": {}
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "RegistrationRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User password",
            "example": "qwerty123"
          }
        }
      },
      "RegistrationResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "email": {
              "type": "string",
              "description": "User email",
              "format": "email"
            }
          }
        },
        "example": [{ "email": "olga@gmail.com" }]
      },
      "LogInResponse": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "User email",
            "format": "email"
          },
          "token": {
            "type": "string",
            "description": "User token",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1YjY3ODVmYjIxOThlNzQxOGIxNmIzMiIsImlhdCI6MTcwNjUxODc5MCwiZXhwIjoxNzA2NjA1MTkwfQ.5xR_zFNtlD8oGGhxDUYlJqW1TZDklkpGIS0mT9Bba7c"
          },
          "name": {
            "type": "string",
            "description": "User name",
            "example": "Olga"
          },
          "gender": {
            "type": "string",
            "enum": ["male", "female"],
            "description": "User gender",
            "example": "female"
          },
          "dailyNorm": {
            "type": "number",
            "description": "User daily rate",
            "example": 1800
          },
          "avatarUrl": {
            "type": "string",
            "description": "User avatar link",
            "example": "www.gravatar.com/avatar/.."
          },
          "created": {
            "type": "string",
            "description": "User created date",
            "example": "2024-02-04T19:25:05.800Z"
          },
          "updated": {
            "type": "string",
            "description": "User updated date",
            "example": "2024-02-05T11:44:45.455Z"
          }
        },
        "example": {
          "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1YjhjNjQ2N2I2ZWM3NzkzNTlmNTUxNyIsImlhdCI6MTcwNjc0MTQzMSwiZXhwIjoxNzA2ODI3ODMxfQ.Ta4WWNV8HpHOzykyyzrnIIOf3etM4-jKa0DLApSCLa8",
          "name": "Olga",
          "email": "olga@test.com",
          "gender": "female",
          "dailyNorm": 1800,
          "avatarUrl": "www.gravatar.com/avatar/..",
          "created": "2024-02-04T19:25:05.800Z",
          "updated": "2024-02-05T11:44:45.455Z"
        }
      },
      "NewPasswordResponse": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "User email",
            "format": "email"
          }
        },
        "example": {
          "email": "olga@test.com"
        }
      },
      "restorePassword": {
        "type": "object",
        "required": ["password"],
        "properties": {
                   "password": {
            "type": "string",
            "description": "User new password",
            "example": "qwerty123"
          }
        }
      },
      "CurrentResponse": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "User email",
            "example": "bogdan@gmail.com"
          },
          "name": {
            "type": "string",
            "description": "User avatar name",
            "example": "User name"
          },
          "gender": {
            "type": "string",
            "enum": ["male", "female"],
            "description": "User gender",
            "example": "male"
          },
          "avatarUrl": {
            "type": "string",
            "description": "User avatar link",
            "example": "http://res.cloudinary.com/.."
          },
          "dailyNorm": {
            "type": "number",
            "description": "User water daily normal",
            "example": 9000
          },
          "token": {
            "type": "string",
            "description": "User token",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1YjY3ODVmYjIxOThlNzQxOGIxNmIzMiIsImlhdCI6MTcwNjUxODc5MCwiZXhwIjoxNzA2NjA1MTkwfQ.5xR_zFNtlD8oGGhxDUYlJqW1TZDklkpGIS0mT9Bba7c"
          },
          "created": {
            "type": "string",
            "description": "User created date",
            "example": "2024-02-04T19:25:05.800Z"
          },
          "updated": {
            "type": "string",
            "description": "User updated date",
            "example": "2024-02-05T11:44:45.455Z"
          }
        },
        "example": {
          "name": "Bogdan",
          "email": "bogdan@gmail.com",
          "gender": "male",
          "dailyNorm": 9000,
          "avatarURL": "http://res.cloudinary.com/..",
          "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1YjY3ODVmYjIxOThlNzQxOGIxNmIzMiIsImlhdCI6MTcwNjUxODc5MCwiZXhwIjoxNzA2NjA1MTkwfQ.5xR_zFNtlD8oGGhxDUYlJqW1TZDklkpGIS0mT9Bba7c",
          "created": "2024-02-04T19:25:05.800Z",
          "updated": "2024-02-05T11:44:45.455Z"
        }
      },
      "AvatarResponse": {
        "type": "object",
        "properties": {
          "avatar": {
            "type": "string",
            "description": "User avatar link",
            "example": "http://res.cloudinary.com/.."
          }
        },
        "example": {
          "avatar": "http://res.cloudinary.com/.."
        }
      },
      "UpdateRequest": {
        "type": "object",
        "properties": {
          "currentPassword": {
            "type": "string",
            "description": "User currentPassword",
            "required": true,
            "example": "balonca1"
          },
          "newPassword": {
            "type": "string",
            "description": "User newPassword",
            "example": "balonca23"
          },
          "email": {
            "type": "string",
            "description": "User email",
            "format": "email"
          },
          "name": {
            "type": "string",
            "description": "User name",
            "example": "User"
          },
          "gender": {
            "type": "string",
            "enum": ["male", "female"],
            "description": "User gender",
            "example": "female"
          }
        },
        "example": {
          "name": "Olga",
          "email": "olga@gmail.com",
          "gender": "female",
          "currentPassword": "balonca1",
          "newPassword": "balonca23"
        }
      },
      "UpdateResponse": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "User email",
            "example": "olga@gmail.com"
          },
          "name": {
            "type": "string",
            "description": "User avatar name",
            "example": "User name"
          },
          "gender": {
            "type": "string",
            "enum": ["male", "female"],
            "description": "User gender",
            "example": "female"
          },
          "avatarURL": {
            "type": "string",
            "description": "User avatar link",
            "example": "http://res.cloudinary.com/.."
          },
          "dailyNorm": {
            "type": "number",
            "description": "User water daily normal",
            "example": 9000
          },
          "created": {
            "type": "string",
            "description": "User created date",
            "example": "2024-02-04T19:25:05.800Z"
          },
          "updated": {
            "type": "string",
            "description": "User updated date",
            "example": "2024-02-05T11:44:45.455Z"
          }
        },
        "example": {
          "name": "Olga",
          "email": "olga@gmail.com",
          "gender": "female",
          "dailyNorm": 9000,
          "avatarURL": "http://res.cloudinary.com/..",
          "created": "2024-02-04T19:25:05.800Z",
          "updated": "2024-02-05T11:44:45.455Z"
        }
      },
      "WaterRate": {
        "type": "object",
        "properties": {
          "dailyNorm": {
            "type": "number",
            "description": "User daily normal water rate",
            "example": 2000
          }
        },
        "example": {
          "dailyNorm": 2000
        }
      },
      "WaterRateDataRequest": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "number",
            "description": "Water amount",
            "example": 2000
          },
          "time": {
            "type": "date",
            "description": "Water intake time",
            "example": "2024-01-29T10:12:33.000Z"
          }
        },
        "example": {
          "amount": 2000,
          "time": "2024-01-29T10:12:33.000Z"
        }
      },
      "WaterRateDataResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "waterId",
            "example": "65ba16968f5cc7285725e5fa"
          },
          "amount": {
            "type": "number",
            "description": "Water amount",
            "example": 2000
          },
          "time": {
            "type": "date",
            "description": "Water intake time",
            "example": "2024-01-29T10:12:33.000Z"
          }
        },
        "example": {
          "_id": "65ba16968f5cc7285725e5fa",
          "amount": 2000,
          "time": "2024-01-29T10:12:33.000Z"
        }
      },
      "DeleteWaterResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "waterId",
            "example": "65ba16968f5cc7285725e5fa"
          }
        },
        "example": {
          "Removed waterId": "65ba16968f5cc7285725e5fa"
        }
      },
      "WaterTodayResponse": {
        "type": "object",
        "properties": {
          "percent": {
            "type": "number",
            "description": "percent of all water consumed per current day",
            "example": 60
          },
          "dailyNorm": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WaterRateDataResponse"
            }
          }
        },
        "example": {
          "percent": 42,
          "dailyList": [
            {
              "_id": "65ba053a12cb26f1af9b88bd",
              "amount": 2250,
              "time": "2024-01-31T12:55:00.000Z"
            },
            {
              "_id": "65ba16968f5cc7285725e5fa",
              "amount": 1550,
              "time": "2024-01-31T12:59:00.000Z"
            }
          ]
        }
      },
      "WaterMonthResponse": {
        "type": "array",
        "properties": {
          "type": "object",
          "properties": {
            "date": {
              "type": "object",
              "properties": {
                "day": {
                  "type": "number",
                  "format": 12,
                  "description": " Day of month",
                  "example": 12
                },
                "month": {
                  "type": "number",
                  "format": 2,
                  "description": " Month of year",
                  "example": 2
                }
              }
            },
            "dailyNorm": {
              "type": "number",
              "description": "User daily rate",
              "example": 9000
            },
            "percent": {
              "type": "number",
              "description": "percent of all water consumed per current day",
              "example": 55
            },
            "quantity": {
              "type": "number",
              "description": "Numbers of all water consumed per current day",
              "example": 3
            }
          }
        },

        "example": [
          {
            "date": {
              "day": 1,
              "month": 2
            },
            "dailyNorm": 3000,
            "percent": 28,
            "quantity": 4
          },
          {
            "date": {
              "day": 2,
              "month": 2
            },
            "dailyNorm": 3000,
            "percent": 55,
            "quantity": 2
          }
        ]
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
