{
  "openapi": "3.0.1",
  "info": {
    "version": "1.0.1",
    "title": "WaterTracker Api",
    "description": "WaterTracker Api-ui-express",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "servers": [{ "url": "https://water-tracker-backend-314i.onrender.com/api" }],
  "tags": [
    {
      "name": "Auth",
      "description": "Authorization endpoints"
    },
    {
      "name": "User",
      "description": "User endpoints"
    },
    {
      "name": "Water",
      "description": "Water endpoints"
    }
  ],

  "paths": {
    "/user/register": {
      "post": {
        "tags": ["Auth"],
        "summary": "User registration",
        "parameters": [],
        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Register is successfully!",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "409": {
            "description": "Email is already in use",
            "content": {}
          }
        }
      }
    },
    "/user/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "User login",
        "parameters": [],
        "requestBody": {
          "description": "Login object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login is successfully!",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogInResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Email or password is wrong",
            "content": {}
          }
        }
      }
    },
    "/user/logout": {
      "post": {
        "tags": ["Auth"],
        "summary": "User logout",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {},
        "responses": {
          "201": {
            "description": "User successfully logout"
          },
          "401": {
            "description": "Not authorized!",
            "content": {}
          }
        }
      }
    },
    "/user/current": {
      "get": {
        "tags": ["User"],
        "summary": "Get current user with all information",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {},
        "responses": {
          "200": {
            "description": "Get current user's data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrentResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized!",
            "content": {}
          }
        }
      }
    },
    "/user/avatars": {
      "patch": {
        "tags": ["User"],
        "summary": "Changing user's avatar",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Update avatar",
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "paramType": "body",
                "properties": {
                  "file": {
                    "type": "file",
                    "name": "file"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AvatarResponse"
                }
              }
            }
          },
          "400": {
            "description": "File format doesn't supported",
            "content": {}
          },
          "409": {
            "description": "Please add your avatar!",
            "content": {}
          }
        }
      }
    },
    "/user/updateUser": {
      "patch": {
        "tags": ["User"],
        "summary": "Changing user's data",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Data object to update",
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Update user's data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "User with email: example@gmail.com already exist",
            "content": {}
          },
          "409": {
            "description": "The entered password is incorrect!",
            "content": {}
          },
          "500": {
            "description": "Something is wrong with the website's server, try again later.",
            "content": {}
          }
        }
      }
    },
    "/users/updateWaterRate": {
      "patch": {
        "tags": ["User"],
        "summary": "Changing daily water rate",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "User Water Rate",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WaterRate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WaterRate"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Not authorized!",
            "content": {}
          }
        }
      }
    },
    "/water/": {
      "post": {
        "tags": ["Water"],
        "summary": "Add information about water rate",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Water rate data",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WaterRateDataRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WaterRateDataResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Not authorized!",
            "content": {}
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "RegistrationRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          }
        }
      },
      "RegistrationResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "email": {
              "type": "string",
              "description": "User's email",
              "format": "email"
            },
            "userId": {
              "type": "number",
              "description": "User's id",
              "example": "65b27b8f81e2cf397d6a87cc"
            }
          }
        },
        "example": [
          { "email": "lilia@gmail.com", "userId": "65b27b8f81e2cf397d6a87cc" }
        ]
      },
      "LogInResponse": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "avatar": {
            "type": "string",
            "description": "User's avatar link",
            "example": "//www.gravatar.com/avatar/..."
          },
          "token": {
            "type": "string",
            "description": "User token",
            "example": "daf7f8a7fy8a7sfda7sydf"
          },
          "name": {
            "type": "string",
            "description": "User name",
            "example": "Lilia"
          }
        },
        "example": {
          "name": "Lilia",
          "email": "lilia@example.com",
          "avatar": "//www.gravatar.com/avatar/...",
          "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1YjY3ODVmYjIxOThlNzQxOGIxNmIzMiIsImlhdCI6MTcwNjUxODc5MCwiZXhwIjoxNzA2NjA1MTkwfQ.5xR_zFNtlD8oGGhxDUYlJqW1TZDklkpGIS0mT9Bba7c"
        }
      },
      "CurrentResponse": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "example": "user@gmail.com"
          },
          "name": {
            "type": "string",
            "description": "User avatar name",
            "example": "User name"
          },
          "gender": {
            "type": "string",
            "enum": ["male", "female"],
            "description": "User gender",
            "example": "male"
          },
          "avatar": {
            "type": "string",
            "description": "User's avatar link",
            "example": "http://res.cloudinary.com/.."
          },
          "dailyNorma": {
            "type": "number",
            "description": "User water daily normal",
            "example": 2
          },
          "token": {
            "type": "string",
            "description": "User token",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1YjY3ODVmYjIxOThlNzQxOGIxNmIzMiIsImlhdCI6MTcwNjUxODc5MCwiZXhwIjoxNzA2NjA1MTkwfQ.5xR_zFNtlD8oGGhxDUYlJqW1TZDklkpGIS0mT9Bba7c"
          }
        },
        "example": {
          "name": "Bogdan",
          "email": "bogdan@gmail.com",
          "gender": "male",
          "dailyNorma": "2",
          "avatar": "http://res.cloudinary.com/..",
          "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1YjY3ODVmYjIxOThlNzQxOGIxNmIzMiIsImlhdCI6MTcwNjUxODc5MCwiZXhwIjoxNzA2NjA1MTkwfQ.5xR_zFNtlD8oGGhxDUYlJqW1TZDklkpGIS0mT9Bba7c"
        }
      },
      "AvatarResponse": {
        "type": "object",
        "properties": {
          "avatar": {
            "type": "string",
            "description": "User avatar link",
            "example": "http://res.cloudinary.com/.."
          }
        },
        "example": {
          "avatar": "http://res.cloudinary.com/.."
        }
      },
      "UpdateRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "name": {
            "type": "string",
            "description": "User avatar name",
            "example": "User"
          },
          "passwordNew": {
            "type": "string",
            "description": "User's password",
            "example": "balonca1"
          },
          "passwordOld": {
            "type": "string",
            "description": "User's password",
            "example": "12345678"
          },
          "gender": {
            "type": "string",
            "enum": ["male", "female"],
            "description": "User gender",
            "example": "female"
          }
        },
        "example": {
          "name": "Lilia",
          "email": "lilia@gmail.com",
          "passwordOld": "12345678",
          "passwordNew": "balonca1",
          "gender": "female"
        }
      },
      "UpdateResponse": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "name": {
            "type": "string",
            "description": "User avatar name",
            "example": "User"
          },
          "gender": {
            "type": "string",
            "enum": ["male", "female"],
            "description": "User gender",
            "example": "female"
          }
        },
        "example": {
          "name": "Lilia",
          "email": "lilia@gmail.com",
          "gender": "female",
          "message": "Visit your new email to confirm it"
        }
      },
      "WaterRate": {
        "type": "object",
        "properties": {
          "dailyNorma": {
            "type": "number",
            "description": "User daily normal water rate",
            "example": 2000
          }
        },
        "example": {
          "dailyNorma": 2000
        }
      },
      "WaterRateDataRequest": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "number",
            "description": "Water amount",
            "example": 2000
          },
          "time": {
            "type": "date",
            "description": "Water intake time",
            "example": "2024-01-29T10:12:33.000Z"
          }
        },
        "example": {
          "amount": 2000,
          "time": "2024-01-29T10:12:33.000Z"
        }
      },
      "WaterRateDataResponse": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "number",
            "description": "Water amount",
            "example": 2000
          },
          "time": {
            "type": "date",
            "description": "Water intake time",
            "example": "2024-01-29T10:12:33.000Z"
          },
          "_id": {
            "type": "object",
            "description": "Id",
            "example": "65b79c8fc516ea0f97c1828c"
          }
        },
        "example": {
          "_id": "65b79c8fc516ea0f97c1828c",
          "amount": 2000,
          "time": "2024-01-29T10:12:33.000Z"
        }
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
